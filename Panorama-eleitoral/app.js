//Carrega os dados json no javascript

      fetch("./dados.json")  

      .then(response => {
         return response.json();
      })
      .then(jsondata => run(jsondata));



//Cria vari√°veis que selecionam trechos do meu HTML: 

      let seletorFaixa = document.querySelector('.faixaEtaria')
         // A vari√°vel "seletorFaixa" seleciona o elemento HTML que possui a classe ".faixaEtaria. No caso, √© um elemento do tipo SELECT que possui dentro dele 9 elementos OPTION. Esta vari√°vel seleciona um elemento pai, o valor desse elemento pai varia de acordo com o atributo "value" do OPTION filho. Isso √© uma particularidade do elemento SELECT. 
      let generos = document.querySelectorAll('input[name="genero"]')
         // A vari√°vel "generos" seleciona todos os elementos do tipo "input" que possuem o atributo "name" igual a "genero". No caso, ela est√° selecionando 3 elementos. 
      let grausDeInstrucao = document.querySelector('.instrucao')
      let estadosCivis = document.querySelector('.estadoCivil')
      let racas = document.querySelector('.raca')
         // As vari√°veis "grausDeInstrucao", "estadosCivis" e "racas" possuem o mesmo comportamento da vari√°vel "seletorFaixa".



//Cria uma fun√ß√£o que reseta o valor dos campos preenchidos em cada um dos filtros.
   
      function limpar(){

         seletorFaixa.value = 'TODOS'
         grausDeInstrucao.value = 'TODOS'
         estadosCivis.value = 'TODOS'
         racas.value = 'TODOS'
            // Determina que o atributo "value" das vari√°veis "seletorFaixa", "grausDeInstrucao", "estadosCivis" e "racas" - declaradas no in√≠cio do c√≥digo - √© igual a "TODOS". No HTML, o elemento do tipo OPTION que possui "value" igual a "TODOS" possui nada de conte√∫do dentro, o que faz com que exista uma op√ß√£o em branco no filtro. 


         for( let genero of generos) {  
            // üö® Crio a vari√°vel "genero". Ela s√≥ existe dentro do FOR. COMO LER: para cada "g√™nero" que houver dentro da minha vari√°vel "generos" (no caso, s√£o 3: Feminino, Masculino e Outro) ...  
         genero.checked = false
            // ... o atributo checked ser√° falso. 
         }
      
            //Por que fazer um FOR? Generos √© uma lista de elementos. Como eu quero que os nenhum elemento esteja marcado, fa√ßo o FOR para passear por todas as tres op√ß√µes.  
      }



//Manda rodar a fun√ß√£o "limpar". 
      
      limpar()



//Cria um objeto de estado chamado "opcoes". Esse objeto possui as seguintes caracter√≠sticas: ano, genero, grauInstrucao, estadoCivil, raca. Nesse momento, o valor dessas carascter√≠sticas √© indefinido. 

      let opcoes = {      
         ano: undefined,
         genero: undefined,
         grauInstrucao: undefined,
         estadoCivil: undefined,            
         raca: undefined   
      } 

//Cria uma vari√°vel chamada "dados", que, por ora, tem valor indefinido.

      let dados = undefined // sintaxe equivalente: "let dados"



//Cria a fun√ß√£o "extraiAno". Ela tem o par√¢metro "data". Esse par√¢metro √© din√¢mico, ou seja, ele n√£o possui uma valor fixo. Ao observarmos o FOR que tem dentro da fun√ß√£o que vem a seguir (RUN), fica mais compreens√≠vel o valor do par√¢metro: data = row.DS_NASCIMENTO. Isso significa, que "data" s√£o os valores da vari√°vel DS_NASCIMENTO da base dados. Cada linha dessa vari√°vel tem um valor diferente.

      function extraiAno(data){ 
         //data seria algo assim: "24/03/1937", ou seja, uma string do meu json.
      return +data.substr(6,4) 
         //üö® "substr" √© um m√©todo, o 6 a partir de qual car√°cter da string quero extrair e o 4 diz a quantidade de itens que deve compor a string.  
      } 



//Cria a fun√ß√£o RUN. Ela evita que os dados em json desapare√ßam. Na realidade, os dados n√£o desapareceriam, eles n√£o seriam aproveitados. S√≥ posso fazer um processamento de dados, se os dados ja tiverem carregados. Por isso, todo o c√≥digo que para ser executado necessita dos dados carregados, tem que estar dentro da fun√ß√£o RUN. 

      function run(jsondata) { 

         document.body.classList.remove( 'carregando' )
            //O comportamento padr√£o da minha p√°gina √© ter transpar√™ncia e estar com o cursor do mouse desabilitado. Nesse trecho de c√≥digo eu removo esse estilo assim que a base de dados √© carregada. COMO LER: Falo para o javascrip olhar toda a minha p√°gina web. De todo o conte√∫do dela, pe√ßo para que ele considere o elemento "body".Adiciono a propriedade classlist, respons√°vel por listar todas as classes do elemento "body". Adiciono o m√©todo "remove", com isso o javascript remove da lista de classes a que eu colocar entre os par√™nteses. No caso, a classe "carregando".  
         
        
         
            //Roda um FOR que executa uma s√©rie de tarefas. Em resumo: elimina o dia e o m√™s da vari√°vel DS_NASCIMENTO, com isso a base de dados fica s√≥ com a informa√ß√£o do ano. Com a informa√ß√£o do ano "em m√£os" cria faixa et√°rias. Por fim, cria na base de dados a vari√°vel "faixaIdade".

         for(row of jsondata){ 
               //COMO LER: "Para cada linha da minha base de dados, quero..."
            let idade = 2022 - (extraiAno(row.DT_NASCIMENTO))
               ///Cria a vari√°vel idade. A vari√°vel idade √© a subtra√ß√£o do ano atual,2022, com o ano de nascimento do candidato em quest√£o. O ano de nascimento de cada candidato foi obtido por meio da fun√ß√£o "extraiAno". O c√≥digo entre parenteses roda a fun√ß√£o "extraiAno" e d√° como par√¢metro a coluna DT_NASCIMENTO do meu Json.
            
            let faixaIdade
               // Cria a vari√°vel faixaIdade, o valor dela muda de acordo com o IF
            if (idade > 18 && idade < 31) faixaIdade = "De 18 a 30 anos"
               //Se a vari√°vel idade - declarada acima -, ou seja, se a subtra√ß√£o for maior que 18 e menor que 31, o valor de faixaIdade ser√° igual √† string "De 18 a 30 anos". 
            if (idade >= 31 && idade <= 40) faixaIdade = "De 31 a 40 anos"
            if (idade >= 41 && idade <= 50) faixaIdade = "De 41 a 50 anos"
            if (idade >= 51 && idade <= 60) faixaIdade = "De 51 a 60 anos"
            if (idade >= 61 && idade <= 70) faixaIdade = "De 61 a 70 anos"
            if (idade >= 71 && idade <= 80) faixaIdade = "De 71 a 80 anos"
            if (idade >= 81 && idade <= 90) faixaIdade = "De 81 a 90 anos"
            if (idade > 90) faixaIdade = "Mais de 90 anos"

            row["faixaIdade"] = faixaIdade 
               //Cria a coluna "faixaIdade" no banco de dados
               //As vari√°veis "idade" e "faixaIdade s√≥ existem dentro do FOR". Elas est√£o dentro do ESCOPO do FOR.
         }

         

         dados = jsondata

            //Define que o valor da vari√°vel "dados" - declarada l√° em cima como "undefined" - √© igual √† minha base de dados.
            //O escopo √© o contexto que meu c√≥digo est√°. O ESCOPO da miha base de dados √© a fun√ß√£o RUN. "DADOS" √© uma vari√°vel global. Ao atribuir a ela o valor de "jsondata", eu consigo ter acesso aos dados fora da fun√ß√£o RUN. 

        
         
         seletorFaixa.addEventListener("change", atualizarOpcoes)
         grausDeInstrucao.addEventListener('change', atualizarOpcoes)
         estadosCivis.addEventListener('change', atualizarOpcoes)
         racas.addEventListener('change', atualizarOpcoes)
            
            //Adiciona √†s vari√°veis "seletorFaixa", "grausDeInstrucao", "estadosCivis" e "racas" - declaradas no in√≠cio do c√≥digo e respons√°veis por selecionar elementos espec√≠ficos do HTML - um m√©todo para escutar eventos. Pede para que o javascript fique atento ao evento "change", se ele ocorrer, roda a fun√ß√£o atualizarOpcoes.

         for (let genero of generos){
            //"Eu tenho uma lista de elementos inputs, para cada um desses inputs vou adicionar um monitorador de evento 
            genero.addEventListener('change', atualizarOpcoes)
            //"... fiquei atento ao evento de "change", se ele ocorrer, rode a fun√ß√£o "atualizaOpcoes"."   
         }
            //Para o filtro sobre o g√™nero das pessoas candidatas √© necess√°rio fazer um FOR, porque a vari√°vel que seleciona o elemento pega cada um dos elementos filhos, ou seja, cada uma das op√ß√µes de resposta para g√™nero (feminino, masculino ou outro). Se colocasse "generos" ia dar erro, porque generos n√£o reprsenta um elemnto HTML, ele √© uma lista de elementos HTML.   
         
      }



//Cria a fun√ß√£o atualizarOpcoes. Nesse momento, entre em cena o objeto de estado "opcoes" criado l√° em cima. Nessa fun√ß√£o, as caracter√≠sticas dele que estavam como indefinidas, passam a ter um valor, esse valor muda de acordo com a op√ß√£o selecionada pelo usu√°rio. 

      function atualizarOpcoes() {
 
         opcoes.ano = seletorFaixa.value
            //"... atribua √† caracter√≠stica "ano" do objeto "opcoes" - at√© ent√£o, com o valor indefinido - o valor do atributo "value" do OPTION selecionado pelo usu√°rio no filtro "Faixa de idade". 
         opcoes.estadoCivil = estadosCivis.value
         opcoes.raca = racas.value       
         opcoes.grauInstrucao = grausDeInstrucao.value
         
         /* OUTRA FORMA DE FAZER A MESMA COISA:
   
         for (let grauInstrucao of grausDeInstrucao) {           
            if (grauInstrucao.selected){
               opcoes.grauInstrucao = grauInstrucao.value
            }
         } */

         for (let genero of generos){
            if (genero.checked) {    
                  //V√™ se o input de "radio" est√° selecionado
               opcoes.genero = genero.value 
                  //Se estiver marcado, guarda no objeto de estado o g√™nero selecionado. 
               }
            }

         filtrar() 
      }



//Cria a fun√ß√£o "filtrar"

      function filtrar() { 

         let contador = 0
            //Cria a vari√°vel "contador". Ela tem valor igual a zero. 
         
         for (let candidato of dados){   
            //"Para cada candidato da minha base de dados..."

            let condicaoFaixa, condicaoGenero, condicaoInstrucao, condicaoCivil, condicaoRaca
               //Cria vari√°veis. Elas s√≥ existem dentro do escopo da fun√ß√£o "filtrar"


            if (opcoes.ano == "TODOS")
               //Se o valor da caracter√≠stica "ano" do objeto "opcoes" for igual a "TODOS", ou seja, se o usu√°rio n√£o escolheu uma op√ß√£o. 
               condicaoFaixa = true
               //O valor da vari√°vel condicaoFaixa - declarada no in√≠cio da fun√ß√£o - ser√° verdadeiro, ou seja, a condi√ß√£o de faixa et√°ria √© ignorada.   
            else 
               condicaoFaixa = opcoes.ano == candidato.faixaIdade
               //Se n√£o, ou seja, se tiver um valor de faixa et√°ria selecionado, eu quero que a condicaoFaixa cheque se a faixa et√°ria que a pessoa selecionou bate com a do candidato. O que est√° depois do sinal de igual (opcoes.ano == candidato.faixaIdade) corresponde a uma checagem. Lembrando que "faixaIdade" √© a coluna que eu criei dinamicamente na minha base de dados. 



            if (opcoes.genero == undefined)
               condicaoGenero = true
            else
               condicaoGenero = opcoes.genero == candidato.DS_GENERO
            

            if (opcoes.grauInstrucao == "TODOS")
               condicaoInstrucao = true
            else 
               condicaoInstrucao = opcoes.grauInstrucao == candidato.DS_GRAU_INSTRUCAO
            

            if (opcoes.estadoCivil == "TODOS")
               condicaoCivil = true
            else 
               condicaoCivil = opcoes.estadoCivil == candidato.DS_ESTADO_CIVIL


            if (opcoes.raca == "TODOS")
               condicaoRaca = true
            else
               condicaoRaca = opcoes.raca == candidato.DS_COR_RACA

            

            if (condicaoFaixa && condicaoGenero && condicaoInstrucao && condicaoCivil && condicaoRaca)   {  
               //Verifica se a informa√ß√£o do json est√° batendo com a informa√ß√£o que foi armazenada.
            contador++         
               //Se as infos baterem, soma 1
            }
         
         }
      
         mostrar(contador)
         
      }



//Cria a fun√ß√£o "mostrar"
            
      function mostrar(contador) {
         
      document.querySelector('.contagem').textContent = contador
      document.querySelector('.porcentagem').textContent = ((contador * 100) / dados.length).toFixed(3)+"%"  
      }

